{"version":3,"sources":["components/constants.js","components/FormComponents.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["initialValues","firstName","lastName","email","acceptedTerms","jobType","dateTime","schema","Yup","min","max","required","oneOf","Date","MyTextInput","label","props","useField","field","meta","showError","touched","error","className","htmlFor","id","name","MySelect","children","MyCheckbox","type","MyDate","Home","validationSchema","onSubmit","values","a","setSubmitting","console","log","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff1e4a26.chunk.js","sourcesContent":["import * as Yup from \"yup\";\r\n\r\n\r\nexport const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    acceptedTerms: false, \r\n    jobType: \"\" ,\r\n    dateTime: \"\"\r\n}\r\n\r\n\r\nexport const schema = Yup.object({\r\n    firstName: Yup.string()\r\n      .min(2, \"El nombre tiene que ser superior a 2\")\r\n      .max(10, \"El nombre tiene que ser inferior a 10\")\r\n      .required(\"Required\"),\r\n    lastName: Yup.string()\r\n      .max(20, \"Debes escribir un apellido\")\r\n      .required(\"Required\"),\r\n    email: Yup.string()\r\n      .email(\"email no valido\")\r\n      .required(\"Required\"),\r\n    acceptedTerms: Yup.boolean()\r\n      .required(\"Required\")\r\n      .oneOf([true], \"Debe aceptar los terminos y condiciones\"),\r\n    jobType: Yup.string()\r\n      .oneOf(\r\n        [\"designer\", \"development\", \"product\", \"other\"],\r\n        \"Tipo no valido\"\r\n      )\r\n      .required(\"Required\"),\r\n    dateTime: Yup.date()\r\n      .min(new Date('01-01-2021'), \"La fecha tiene que ser superior a 01/01/2021\")\r\n      .max(new Date(), \"La fecha tiene que ser inferior a hoy\")\r\n      .required(\"Required\"),\r\n  })","import {useField} from \"formik\";\r\n\r\n\r\nexport function MyTextInput({ label, ...props }) {\r\n    const [field, meta] = useField(props);\r\n    const showError = meta.touched && meta.error;\r\n\r\n    return (\r\n      <div className=\"container-input\">\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <div className=\"subcontainer-input\">\r\n            <input className={`input-field ${showError && 'input-error'}`} {...field} {...props} />\r\n            {showError && <div className='input-error-label'>{meta.error}</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\nexport const MySelect = ({children, label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    const showError = meta.touched && meta.error;\r\n\r\n    return (\r\n      <div className=\"container-input\">\r\n        <div htmlFor={props.id || props.name}>{label}</div>\r\n        <select {...field} className={`input-field ${showError && 'input-error'}`}>\r\n            {children}\r\n        </select>\r\n        {showError && <div className='input-error-label'>{meta.error}</div>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n export const MyCheckbox = ({ children, ...props }) => {\r\n    const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n    const showError = meta.touched && meta.error;\r\n\r\n    return (\r\n      <div className=\"container-input\">\r\n        <label className=\"checkbox\">\r\n          <input {...field} {...props} type=\"checkbox\" />\r\n          {children}\r\n        </label>\r\n        {showError && <div className='input-error-label'>{meta.error}</div>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\nexport const MyDate = ({ ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    const showError = meta.touched && meta.error;\r\n\r\n    return (\r\n      <div className=\"container-input\">\r\n        <input {...field} {...props} type=\"date\" className={`input-field ${showError && 'input-error'}`}/>\r\n        {showError && <div className='input-error-label'>{meta.error}</div>}\r\n      </div>\r\n    );\r\n  };","import {Formik, Form} from \"formik\";\r\nimport {initialValues, schema} from './constants';\r\nimport {MyTextInput, MySelect, MyCheckbox, MyDate} from './FormComponents'\r\n\r\n\r\n\r\nexport default function Home(){\r\n\r\n    return (\r\n        <>\r\n        <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={schema}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          console.log(values)\r\n          setSubmitting(false);\r\n        }}\r\n        >\r\n            <Form className=\"form\">\r\n\r\n              <MyTextInput\r\n                  label=\"Nombre\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n              />\r\n\r\n              <MyTextInput\r\n                  label=\"Apellido\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n              />\r\n\r\n              <MyTextInput\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n              />\r\n\r\n              <MySelect label=\"Job Type\" name=\"jobType\">\r\n                <option value=\"\">Select a job type</option>\r\n                <option value=\"designer\">Designer</option>\r\n                <option value=\"development\">Developer</option>\r\n                <option value=\"product\">Product Manager</option>\r\n                <option value=\"other\">Other</option>\r\n                <option value=\"SeSuponeQueEstoEstaMal\">Se supone que esto esta mal</option>\r\n              </MySelect>\r\n\r\n              <MyCheckbox \r\n                name=\"acceptedTerms\"\r\n                >\r\n                  Aceptar las condiciones\r\n              </MyCheckbox>\r\n\r\n              <MyDate name=\"dateTime\"/>\r\n\r\n              <button type=\"submit\">Submit</button>\r\n            </Form>         \r\n        </Formik>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Home />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}